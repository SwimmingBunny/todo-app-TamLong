{"version":3,"sources":["layout/Header.js","component/Todoitem.js","layout/Body.js","layout/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","style","margin","library","add","fab","faCheckSquare","faCoffee","faCheck","faEraser","TodoItem","props","checkIsDone","isDone","React","useState","initValue","editItem","setEditItem","className","isEdit","value","onChange","e","target","it","type","onClick","onCancel","onSave","handleIsDone","icon","handleClear","onEdit","faPlus","faTrash","Body","taskList","date","setDate","setValue","listItem","setListItem","getName","setGetName","confirmName","setConfirmName","editingItem","setEditingItem","hanleDone","setHandleDone","STATUS","currentPage","setCurrentPage","useEffect","list","localStorage","getItem","JSON","parse","console","log","handleCheckItem","i","window","confirm","afterCheck","map","vl","idx","setItem","stringify","handleClearItem","c","splice","id","placeholder","alert","message","info","format","marginTop","item","length","removeItem","filter","index","Todoitem","newValue","newList","pageSize","current","total","page","faChevronLeft","faChevronRight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00405264.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1 style={{ margin: \"10px 0\" }}>Todo List Application</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, Input } from \"antd\";\r\nimport Animate from \"rc-animate\";\r\nimport \"../Todoapp.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faCheck,\r\n  faEraser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nlibrary.add(fab, faCheckSquare, faCoffee, faCheck, faEraser);\r\n\r\nconst TodoItem = (props) => {\r\n  const checkIsDone = props.isDone;\r\n  const [editItem, setEditItem] = React.useState(props.initValue);\r\n  return (\r\n    <div className=\"body__item\">\r\n      {!props.isEdit ? (\r\n        <p\r\n          className={checkIsDone ? \"body__item-text--done\" : \"body__item-text\"}\r\n        >\r\n          {props.it}\r\n        </p>\r\n      ) : (\r\n        <Input value={editItem} onChange={(e) => setEditItem(e.target.value)} />\r\n      )}\r\n\r\n      <div className=\"body__item-btn\">\r\n        {!props.isEdit ? (\r\n          <>\r\n            <Button\r\n              className={\r\n                checkIsDone ? \"body__item-icon--done\" : \"body__item-icon\"\r\n              }\r\n              onClick={props.handleIsDone}\r\n              type=\"primary\"\r\n            >\r\n              <FontAwesomeIcon icon=\"check\" />\r\n            </Button>\r\n            <Button\r\n              className=\"body__item-clear\"\r\n              onClick={props.handleClear}\r\n              type=\"primary\"\r\n            >\r\n              <FontAwesomeIcon icon=\"eraser\" />\r\n            </Button>\r\n            <Button onClick={props.onEdit} type=\"primary\">\r\n              Edit\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                props.onCancel();\r\n                setEditItem(props.initValue);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                props.onSave(editItem);\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport { DatePicker, Button, message, Input, Pagination } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n// ReactDOM.render(<DatePicker />, mountNode);\r\nimport Todoitem from \"../component/Todoitem\";\r\nimport \"../Todoapp.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nlibrary.add(fab, faPlus, faTrash);\r\nconst Body = () => {\r\n  const taskList = \"tasklisk\";\r\n  const [date, setDate] = React.useState(null);\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [listItem, setListItem] = React.useState([]);\r\n  const [getName, setGetName] = React.useState(\"\");\r\n  const [confirmName, setConfirmName] = React.useState(\"\");\r\n  const [editingItem, setEditingItem] = React.useState(-1);\r\n  const [hanleDone, setHandleDone] = React.useState(\"\");\r\n  const STATUS = { DONE: \"done\", ALL: \"all\", UNDONE: \"undone\" };\r\n\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const PAGE_SIZE = 8;\r\n\r\n  const handleChange = (value) => {\r\n    message.info(\r\n      `Selected Date: ${value ? value.format(\"YYYY-MM-DD\") : \"None\"}`\r\n    );\r\n    setDate(value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const list = localStorage.getItem(taskList);\r\n    if (list) {\r\n      setListItem(JSON.parse(list));\r\n    }\r\n  }, []);\r\n  const showData = () =>\r\n    listItem\r\n      .filter((vl) => {\r\n        switch (hanleDone) {\r\n          case STATUS.DONE:\r\n            return vl.isDone;\r\n\r\n          case STATUS.UNDONE:\r\n            return !vl.isDone;\r\n          default:\r\n            return true;\r\n        }\r\n      })\r\n      .splice((currentPage - 1) * PAGE_SIZE)\r\n      .splice(0, PAGE_SIZE)\r\n      .map((item, index) => {\r\n        return (\r\n          <Todoitem\r\n            it={item.item}\r\n            key={index}\r\n            isDone={item.isDone}\r\n            handleIsDone={() => handleCheckItem(index)}\r\n            handleClear={() => handleClearItem(index)}\r\n            initValue={item.item}\r\n            isEdit={editingItem === index}\r\n            onEdit={() => {\r\n              setEditingItem(index);\r\n            }}\r\n            onCancel={() => {\r\n              setEditingItem(-1);\r\n            }}\r\n            onSave={(newValue) => {\r\n              const newList = listItem.map((vl, idx) => {\r\n                if (idx === index) {\r\n                  vl.item = newValue;\r\n                }\r\n                return vl;\r\n              });\r\n              localStorage.setItem(taskList, JSON.stringify(newList));\r\n              setListItem(newList);\r\n              setEditingItem(-1);\r\n            }}\r\n          />\r\n        );\r\n      });\r\n  console.log((currentPage - 1) * PAGE_SIZE, currentPage * PAGE_SIZE);\r\n  const handleListData = () => {\r\n    if (value === \"\") {\r\n      alert(\"Please add task\");\r\n    } else {\r\n      const list = [{ item: value, isDone: false }, ...listItem];\r\n      localStorage.setItem(taskList, JSON.stringify(list));\r\n      setListItem(list);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n  const handleCheckItem = (i) => {\r\n    const confirmDoneItem = window.confirm(\"Are you sure this task done ?\");\r\n    if (confirmDoneItem) {\r\n      const afterCheck = listItem.map((vl, idx) => {\r\n        if (i === idx) {\r\n          vl.isDone = !vl.isDone;\r\n        }\r\n        return vl;\r\n      });\r\n      localStorage.setItem(taskList, JSON.stringify(afterCheck));\r\n      setListItem(afterCheck);\r\n    }\r\n  };\r\n  const handleClearItem = (c) => {\r\n    const confirmClearItem = window.confirm(\"Are you sure to clear this task\");\r\n    if (confirmClearItem) {\r\n      listItem.splice(c, 1);\r\n      localStorage.setItem(taskList, JSON.stringify(listItem));\r\n      setListItem([...listItem]);\r\n      setCurrentPage(0);\r\n    }\r\n  };\r\n  const handleClearData = () => {\r\n    if (listItem.length === 0) {\r\n      alert(\"Please add task\");\r\n    } else {\r\n      const confirmClear = window.confirm(\"Are you sure to clear all task?\");\r\n      if (confirmClear) {\r\n        localStorage.removeItem(taskList);\r\n        setListItem([]);\r\n      }\r\n    }\r\n  };\r\n  const handleUserName = () => {\r\n    if (getName === \"\") {\r\n      alert(\"Please Add Your Name\");\r\n    } else {\r\n      setConfirmName(getName);\r\n      setGetName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"body__header\">\r\n        <div className=\"body__header-user\">\r\n          <div className=\"body__header-input\">\r\n            <Input\r\n              value={getName}\r\n              id=\"getname\"\r\n              onChange={(e) => {\r\n                setGetName(e.target.value);\r\n              }}\r\n              placeholder=\"Enter your Username \"\r\n            />\r\n            <Button id=\"edit\" onClick={handleUserName} type=\"primary\">\r\n              {confirmName ? \"Edit\" : \"Confirm\"}\r\n            </Button>\r\n          </div>\r\n\r\n          <p id=\"username\">{confirmName}</p>\r\n        </div>\r\n        <div className=\"body__header-date\">\r\n          <DatePicker onChange={handleChange} />\r\n          <div style={{ marginTop: 16 }}>\r\n            Selected Date: {date ? date.format(\"DD-MM-YYYY\") : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"body__task\">\r\n        <Input\r\n          className=\"body__input\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder=\"Add your task\"\r\n        />\r\n        <Button className=\"body__btn\" onClick={handleListData} type=\"primary\">\r\n          <FontAwesomeIcon icon=\"plus\" />\r\n        </Button>\r\n        <Button className=\"body__btn\" onClick={handleClearData} type=\"primary\">\r\n          <FontAwesomeIcon icon=\"trash\" />\r\n        </Button>\r\n        <div>\r\n          <Button\r\n            onClick={() => {\r\n              setHandleDone(STATUS.ALL);\r\n            }}\r\n            type=\"primary\"\r\n          >\r\n            Show All task\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setHandleDone(STATUS.UNDONE);\r\n            }}\r\n            type=\"primary\"\r\n            className=\"undone\"\r\n          >\r\n            Show Undone task\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setHandleDone(STATUS.DONE);\r\n            }}\r\n            type=\"primary\"\r\n          >\r\n            Show Done task\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"body__list\">{showData()}</div>\r\n      <Pagination\r\n        pageSize={PAGE_SIZE}\r\n        current={currentPage}\r\n        total={listItem.length}\r\n        onChange={(page) => {\r\n          setCurrentPage(page);\r\n        }}\r\n      />\r\n      ;\r\n    </>\r\n  );\r\n};\r\nexport default Body;\r\n","import React from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { DatePicker, Button, message, Input } from \"antd\";\r\n\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nlibrary.add(fab, faChevronLeft, faChevronRight);\r\nconst Footer = () => {\r\n  return null;\r\n};\r\nexport default Footer;\r\n","import React from \"react\";\n// import Home from \"./screen/Home\";\nimport Header from \"./layout/Header\";\nimport Body from \"./layout/Body\";\nimport Footer from \"./layout/Footer\";\nimport \"./Todoapp.css\";\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <div className=\"contain\">\n        <div className=\"header\">\n          <Header />\n        </div>\n        <div className=\"body\">\n          <Body />\n        </div>\n        {/* <div className=\"footer\">\n          <Footer />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}